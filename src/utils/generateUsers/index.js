const firstNames = [
  "Cynthia",
  "Conway",
  "English",
  "Gwen",
  "Acosta",
  "Tabatha",
  "Carrie",
  "Marie",
  "Abigail",
  "Anastasia",
  "Julie",
  "Karin",
  "Angelique",
  "Avery",
  "Brandie",
  "Mccall",
  "Gina",
  "Hurley",
  "Wendi",
  "Tonya",
  "Anne",
  "Barr",
  "Sabrina",
  "Hilda",
  "Gray",
  "Daniels",
  "Wise",
  "Ross",
  "Maude",
  "Castaneda",
  "Woodard",
  "Hinton",
  "Duke",
  "Jeannie",
  "Enid",
  "Allison",
  "Tabitha",
  "Holcomb",
  "Sally",
  "Ashlee",
  "Sosa",
  "Hooper",
  "Sherman",
  "Barbara",
  "Shepard",
  "Rosanne",
  "Mary",
  "Jennifer",
  "Benton",
  "Jeannine",
  "Lester",
  "Tracy",
  "Jamie",
  "Lawrence",
  "Alma",
  "Rice",
  "Franco",
  "Goldie",
  "Goff",
  "Colette",
  "Ortiz",
  "Day",
  "Valeria",
  "Desiree",
  "Tamra",
  "Estrada",
  "Bradley",
  "Nichole",
  "Burks",
  "Judith",
  "Fay",
  "Melton",
  "Bean",
  "Carmen",
  "Alexander",
  "Stacey",
  "Stevens",
  "Zamora",
  "Marina",
  "Ada",
  "Mccray",
  "Guadalupe",
  "Roxie",
  "Romero",
  "Sasha",
  "Blevins",
  "Hattie",
  "Bianca",
  "April",
  "Susanna",
  "Taylor",
  "Alisha",
  "Tammie",
  "Rhodes",
  "Amie",
  "Mitchell",
  "Madge",
  "Chapman",
  "Annmarie",
  "Cooper",
];

const lastNames = [
  "Evans",
  "Reynolds",
  "Spears",
  "Barlow",
  "Acevedo",
  "Mccarthy",
  "Dickson",
  "Flynn",
  "Hoover",
  "Farley",
  "Wilson",
  "Gray",
  "Rios",
  "Ashley",
  "Walter",
  "Bonner",
  "Noble",
  "Santana",
  "Parker",
  "Dudley",
];

const mails = [
  "sample.com",
  "arpy.com",
  "rpy.com",
  "mail.com",
  "jourrapide.com",
];

const genders = ["male", "female"];

const phoneNumbers = [
  "(854) 534-3198",
  "(991) 599-3473",
  "(862) 451-2254",
  "(860) 564-3923",
  "(863) 571-3211",
  "(827) 431-3173",
  "(886) 463-3555",
  "(962) 547-3853",
  "(974) 441-3307",
  "(972) 582-2158",
  "(820) 491-3343",
  "(839) 597-2528",
  "(977) 400-2658",
  "(903) 465-2701",
  "(993) 589-3555",
  "(916) 558-3185",
  "(815) 577-2037",
  "(950) 586-2651",
  "(851) 597-3535",
  "(849) 587-2343",
  "(893) 469-3208",
  "(843) 588-2375",
  "(952) 496-2442",
  "(854) 477-3194",
  "(964) 479-2514",
  "(868) 554-2957",
  "(967) 535-3176",
  "(865) 506-2802",
  "(945) 568-3932",
  "(877) 572-2310",
  "(853) 437-3447",
  "(847) 483-3517",
  "(828) 405-3918",
  "(975) 528-2695",
  "(836) 517-3779",
  "(843) 524-3588",
  "(831) 572-2632",
  "(809) 487-2540",
  "(990) 535-3162",
  "(833) 468-2057",
  "(924) 518-2221",
  "(945) 529-2448",
  "(909) 564-2929",
  "(995) 444-2376",
  "(870) 402-3173",
  "(838) 598-3291",
  "(901) 585-3675",
  "(978) 520-2592",
  "(994) 415-3295",
  "(947) 412-2333",
];

const companyNames = [
  "EARGO",
  "NORSUP",
  "SPACEWAX",
  "ZAPPIX",
  "ECLIPSENT",
  "ISONUS",
  "FUELWORKS",
  "MEDIFAX",
  "NETBOOK",
  "INVENTURE",
  "EMTRAK",
  "SNACKTION",
  "ISOTERNIA",
  "SYNTAC",
  "MEMORA",
  "VORATAK",
  "XIXAN",
  "FROLIX",
  "JUMPSTACK",
  "VENOFLEX",
  "HOUSEDOWN",
  "ZAYA",
  "SAVVY",
  "INCUBUS",
  "KNOWLYSIS",
  "TECHADE",
  "VELITY",
  "CYTREX",
  "PIGZART",
  "GEEKOLA",
  "QUIZMO",
  "IMPERIUM",
  "ORGANICA",
  "ICOLOGY",
  "MONDICIL",
  "IMANT",
  "KAGGLE",
  "COMTOURS",
  "FUTURITY",
  "FRENEX",
];

const streetAddresses = [
  "Roosevelt Place",
  "Jefferson Street",
  "Beacon Court",
  "Joralemon Street",
  "Kermit Place",
  "Adelphi Street",
  "Quincy Street",
  "Albany Avenue",
  "Lincoln Place",
  "Boynton Place",
  "Elizabeth Place",
  "Oceanview Avenue",
  "Auburn Place",
  "Dictum Court",
  "Hancock Street",
  "Branton Street",
  "Emmons Avenue",
  "Kensington Walk",
  "Ide Court",
  "Poplar Avenue",
  "Evergreen Avenue",
  "Lewis Place",
  "Himrod Street",
  "Gallatin Place",
  "Heath Place",
  "Arlington Avenue",
  "Havemeyer Street",
  "Bleecker Street",
  "Otsego Street",
  "Canton Court",
];

const cityNames = [
  "Edgewater",
  "Hoagland",
  "Cavalero",
  "Buxton",
  "Rowe",
  "Fowlerville",
  "Bakersville",
  "Oretta",
  "Heil",
  "Lindisfarne",
  "Wawona",
  "Enetai",
  "Lemoyne",
  "Haring",
  "Ryderwood",
  "Reinerton",
  "Wikieup",
  "Winston",
  "Beaverdale",
  "Villarreal",
];

const states = [
  "Nebraska",
  "Idaho",
  "North Dakota",
  "Minnesota",
  "Oklahoma",
  "North Carolina",
  "Kansas",
  "Michigan",
  "Kentucky",
  "New Hampshire",
  "Louisiana",
  "New York",
  "Delaware",
  "District Of Columbia",
  "Federated States Of Micronesia",
  "American Samoa",
  "Indiana",
  "Marshall Islands",
  "Connecticut",
  "Alabama",
];

const countryCodes = ["EN", "US", "CHN", "FR", "CA", "VN", "AU", "GER", "MEX"];

const zipCodes = [
  8070, 6387, 4443, 2927, 1781, 388, 3598, 6783, 7488, 4462, 3401, 9142, 1326,
  2440, 5180, 639, 8674, 9953, 1450, 9268, 6447, 9257, 4516, 5930, 8543, 4550,
  8388, 8985, 8242, 5638, 8664, 883, 5642, 6773, 9829, 517, 9633, 8827, 906,
  5619, 7128, 6686, 2093, 6348, 123, 8024, 1908, 9547, 8474, 1297,
];

export function generateUser(no) {
  const user = {};

  user.no = no;
  user.firstName = firstNames[Math.floor(Math.random() * firstNames.length)];
  user.lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
  user.age = Math.floor(Math.random() * (55 - 24) + 24);
  user.gender = genders[Math.floor(Math.random() * genders.length)];
  user.userName = `${user.firstName}.${user.lastName}`.toLowerCase();
  user.email = `${user.userName}@${
    mails[Math.floor(Math.random() * mails.length)]
  }`;
  user.url = `http://linkedin.com/${user.userName}`;
  user.phoneNumber =
    phoneNumbers[Math.floor(Math.random() * phoneNumbers.length)];
  user.companyName =
    companyNames[Math.floor(Math.random() * companyNames.length)];
  user.streetAddress =
    streetAddresses[Math.floor(Math.random() * streetAddresses.length)];
  user.cityName = cityNames[Math.floor(Math.random() * cityNames.length)];
  user.state = states[Math.floor(Math.random() * states.length)];
  user.countryCode =
    countryCodes[Math.floor(Math.random() * countryCodes.length)];
  user.zipCode = zipCodes[Math.floor(Math.random() * zipCodes.length)];

  return user;
}

export function getData(dataCount) {
  const users = [];

  for (let i = 1; i <= dataCount; i++) {
    const user = generateUser(i);

    users.push(user);
  }

  return users;
}
